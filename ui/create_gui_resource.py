"""    Creates python resource file for PyQt5 with pyrcc5"""import sysimport lxml.etree as Etfrom pathlib import Pathfrom shlex import split as shell_syntaxfrom subprocess import runfrom modules.utils.settings import Settings, delayed_log_setupfrom modules.utils.globals import Resource, UI_RSC_FILE, UI_PATHS_FILEui_rsc = Path(UI_RSC_FILE)ui_rsc_out = ui_rsc.with_suffix('.py').namescripts_dir = Path(sys.executable).parent  # eg. C:/Python/Scriptspyside_rcc_path = scripts_dir.parent / 'Lib' / 'site-packages' / 'PySide2' / 'pyside2-rcc.exe'args = pyside_rcc_path.as_posix() + f" -no-compress -o {ui_rsc_out} {ui_rsc.as_posix()}"print(shell_syntax(args))run(shell_syntax(args), shell=True)# Update resource pathswith open(ui_rsc, 'r') as f:    xml = Et.parse(f)for e in xml.iterfind('qresource'):    prefix = e.get('prefix')    if not prefix:        continue    print('---- Prefix: {} ----'.format(prefix))    for file in e.iter('file'):        file_path = file.text        if not file_path:            continue        rsc_path = ':/{}/{}'.format(prefix, file_path)        print(rsc_path)        Resource.icon_paths[Path(file_path).stem] = rsc_pathfor ui_file in Path('.').glob('*.ui'):    Resource.ui_paths[ui_file.stem] = ui_file.as_posix()# Write to jsondelayed_log_setup()Settings.save(Resource, Path(UI_PATHS_FILE).absolute())sys.exit()